{"remainingRequest":"/home/alijon/pet-projects/test-on-vue-3/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/alijon/pet-projects/test-on-vue-3/src/components/AppCheckbox.vue?vue&type=template&id=1a24632e","dependencies":[{"path":"/home/alijon/pet-projects/test-on-vue-3/src/components/AppCheckbox.vue","mtime":1677416107888},{"path":"/home/alijon/pet-projects/test-on-vue-3/node_modules/babel-loader/lib/index.js","mtime":1677358791782},{"path":"/home/alijon/pet-projects/test-on-vue-3/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1677358836761},{"path":"/home/alijon/pet-projects/test-on-vue-3/node_modules/cache-loader/dist/cjs.js","mtime":1677358791790},{"path":"/home/alijon/pet-projects/test-on-vue-3/node_modules/vue-loader-v16/dist/index.js","mtime":1677358836761}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGxhYmVsIGNsYXNzPSJhcHAtY2hlY2tib3giPgogICAgPGlucHV0IHR5cGU9ImNoZWNrYm94IiA6dmFsdWU9Im1vZGVsVmFsdWUiIEBpbnB1dD0iJGVtaXQoJ3VwZGF0ZTptb2RlbFZhbHVlJywgJGV2ZW50LnRhcmdldC5jaGVja2VkKSIgLz4KICAgIDxzcGFuPgogICAgICA8c2xvdD48L3Nsb3Q+CiAgICA8L3NwYW4+CiAgPC9sYWJlbD4K"},{"version":3,"sources":["/home/alijon/pet-projects/test-on-vue-3/src/components/AppCheckbox.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACvG,CAAC,CAAC,CAAC,CAAC,CAAC;MACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACR,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/alijon/pet-projects/test-on-vue-3/src/components/AppCheckbox.vue","sourceRoot":"","sourcesContent":["<template>\n  <label class=\"app-checkbox\">\n    <input type=\"checkbox\" :value=\"modelValue\" @input=\"$emit('update:modelValue', $event.target.checked)\" />\n    <span>\n      <slot></slot>\n    </span>\n  </label>\n</template>\n\n<script>\n/**\n * @name AppCheckbox\n * @description Application checkbox\n */\nexport default {\n  name: \"AppCheckbox\",\n  props: {\n    /**\n     * model value\n     */\n    modelValue: {\n      type: Boolean,\n    },\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"@/scss/app.scss\";\n\n.app-checkbox {\n  @include text-body-small;\n\n  position: relative;\n  display: block;\n  width: fit-content;\n  padding-left: 3.2rem;\n  border: 0;\n  color: var(--text-color);\n  font-weight: 500;\n  background: transparent;\n\n  > span {\n    &::before {\n      @include box(1.7rem);\n\n      position: absolute;\n      top: 50%;\n      left: 2px;\n      border-radius: 4px;\n      box-shadow: inset 0 0 0 1px var(--border-color);\n      transform: translateY(-50%);\n      transition: box-shadow 0.3s ease, background 0.3s ease, opacity 0.3s ease;\n      content: '';\n    }\n\n    &::after {\n      @include box(1.7rem);\n\n      position: absolute;\n      top: 50%;\n      left: 2px;\n      background-image: url(\"data:image/svg+xml,%3Csvg width='14' height='14' viewBox='0 0 14 14' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M11.4446 3.6665L5.33344 9.77762L2.55566 6.99984' stroke='white' stroke-linecap='round' stroke-linejoin='round'/%3E%3C/svg%3E%0A\");\n      background-repeat: no-repeat;\n      background-size: 100%;\n      transform: translateY(-50%);\n      transition: clip-path 0.3s ease;\n      content: '';\n      clip-path: polygon(0 0, 0 0, 0 100%, 0 100%);\n    }\n  }\n\n  input {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    margin: -1px;\n    padding: 0;\n    border: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n\n    &:checked + span {\n      &::before {\n        background: var(--accent-color);\n        box-shadow: inset 0 0 0 1px transparent;\n      }\n\n      &::after {\n        clip-path: polygon(0 0, 100% 0, 100% 100%, 0 100%);\n      }\n    }\n  }\n\n  @include hover {\n    cursor: pointer;\n\n    > input:checked + span {\n      &::before {\n        opacity: 0.8;\n      }\n    }\n\n    &:active {\n      > input + span {\n        &::before {\n          box-shadow: inset 0 0 0 1px var(--text-secondary-color);\n        }\n      }\n\n      > input:checked + span {\n        &::before {\n          opacity: 0.6;\n        }\n      }\n    }\n  }\n}\n</style>"]}]}