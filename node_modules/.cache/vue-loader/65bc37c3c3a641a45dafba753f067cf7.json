{"remainingRequest":"/home/alijon/pet-projects/emphaSoft/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/alijon/pet-projects/emphaSoft/src/components/UserList.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/alijon/pet-projects/emphaSoft/src/components/UserList.vue","mtime":1689054994697},{"path":"/home/alijon/pet-projects/emphaSoft/node_modules/cache-loader/dist/cjs.js","mtime":1687656704219},{"path":"/home/alijon/pet-projects/emphaSoft/node_modules/babel-loader/lib/index.js","mtime":1687656704059},{"path":"/home/alijon/pet-projects/emphaSoft/node_modules/cache-loader/dist/cjs.js","mtime":1687656704219},{"path":"/home/alijon/pet-projects/emphaSoft/node_modules/vue-loader-v16/dist/index.js","mtime":1687656705759}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7Y29tcHV0ZWQsIHJlZn0gZnJvbSAidnVlIjsKaW1wb3J0IHt1c2VTdG9yZX0gZnJvbSAndnVleCcKaW1wb3J0IEFwcEZpZWxkIGZyb20gIi4vQXBwRmllbGQiOwppbXBvcnQge3VzZVJvdXRlcn0gZnJvbSAidnVlLXJvdXRlciI7CgovKioKICogQG5hbWUgVXNlckxpc3QKICogQGRlc2NyaXB0aW9uIExpc3Qgb2YgdXNlcgogKi8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJVc2VyTGlzdCIsCiAgY29tcG9uZW50czoge0FwcEZpZWxkfSwKICBwcm9wczogewogICAgaXRlbXM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIHJlcXVpcmU6IHRydWUsCiAgICB9LAogIH0sCiAgc2V0dXAocHJvcHMpIHsKICAgIGNvbnN0IHN0b3JlID0gdXNlU3RvcmUoKQogICAgY29uc3Qgcm91dGVyID0gdXNlUm91dGVyKCkKICAgIGNvbnN0IHNlYXJjaFVzZXJuYW1lID0gcmVmKCcnKQogICAgY29uc3QgdG9rZW4gPSBjb21wdXRlZCgoKSA9PiBzdG9yZS5nZXR0ZXJzWydsb2dpbi9Ub2tlbiddKQoKICAgIGNvbnN0IHVzZXJzID0gY29tcHV0ZWQoKCkgPT4gewogICAgICByZXR1cm4gcHJvcHMuaXRlbXMKICAgICAgICAgIC5maWx0ZXIoKHt1c2VybmFtZX0pID0+IHsKCiAgICAgICAgICAgIGlmICghIXNlYXJjaFVzZXJuYW1lLnZhbHVlKSB7CiAgICAgICAgICAgICAgY29uc3QgcmVnZXggPSBuZXcgUmVnRXhwKHNlYXJjaFVzZXJuYW1lLnZhbHVlLCAnZ2knKTsKICAgICAgICAgICAgICByZXR1cm4gdXNlcm5hbWUubWF0Y2gocmVnZXgpCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiB0cnVlCiAgICAgICAgICB9KQogICAgICAgICAgLnNvcnQoKHtpZH0sIHtpZDogbmV4dElkfSkgPT4gaWQgLSBuZXh0SWQpCiAgICB9KQoKICAgIGNvbnN0IGVkaXQgPSAoaWQpID0+IHsKICAgICAgcm91dGVyLnB1c2goeyBuYW1lOiBgdXNlcmAsIHBhcmFtczoge2lkfSB9KQogICAgfQoKICAgIHJldHVybiB7CiAgICAgIHNlYXJjaFVzZXJuYW1lLAogICAgICB1c2VycywKICAgICAgZWRpdCwKICAgICAgdG9rZW4sCiAgICB9CiAgfSwKfQo="},{"version":3,"sources":["/home/alijon/pet-projects/emphaSoft/src/components/UserList.vue"],"names":[],"mappings":"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","file":"/home/alijon/pet-projects/emphaSoft/src/components/UserList.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"users\">\n    <div v-if=\"token\" class=\"users__filter\">\n      <AppField id=\"search-user-name\" placeholder=\"Введите имя пользователя\" v-model=\"searchUsername\">\n        Поиск по имени\n      </AppField>\n    </div>\n    <div v-if=\"token\" class=\"users__items\">\n      <table v-if=\"!!users.length\">\n        <thead>\n          <tr>\n            <th>Номер</th>\n            <th>Фамилия</th>\n            <th>Имя</th>\n            <th>Ник</th>\n            <th>Событие</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"({id, last_name, first_name, username}, index) in users\" :key=\"index\">\n            <td class=\"_center\">\n              <span>{{ id }}</span>\n            </td>\n            <td>{{ last_name }}</td>\n            <td>{{ first_name }}</td>\n            <td>{{ username }}</td>\n            <td>\n              <button type=\"button\" class=\"btn _warning users__btn-edit\" @click=\"edit(id)\">\n                Редактирование\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div v-else class=\"users__undefined\">\n        <h2>Ничего не найдено</h2>\n      </div>\n    </div>\n    <div v-else class=\"users__not-able\">\n      <h3>Не доступно!</h3>\n      <p>\n        К сожалению, вы не авторизованы, для получения доступа вам необходимо авторизоваться по\n        <router-link to=\"/login\">\n          ссылке\n        </router-link>\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {computed, ref} from \"vue\";\nimport {useStore} from 'vuex'\nimport AppField from \"./AppField\";\nimport {useRouter} from \"vue-router\";\n\n/**\n * @name UserList\n * @description List of user\n */\nexport default {\n  name: \"UserList\",\n  components: {AppField},\n  props: {\n    items: {\n      type: Array,\n      require: true,\n    },\n  },\n  setup(props) {\n    const store = useStore()\n    const router = useRouter()\n    const searchUsername = ref('')\n    const token = computed(() => store.getters['login/Token'])\n\n    const users = computed(() => {\n      return props.items\n          .filter(({username}) => {\n\n            if (!!searchUsername.value) {\n              const regex = new RegExp(searchUsername.value, 'gi');\n              return username.match(regex)\n            }\n\n            return true\n          })\n          .sort(({id}, {id: nextId}) => id - nextId)\n    })\n\n    const edit = (id) => {\n      router.push({ name: `user`, params: {id} })\n    }\n\n    return {\n      searchUsername,\n      users,\n      edit,\n      token,\n    }\n  },\n}\n</script>\n"]}]}