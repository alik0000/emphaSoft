{"remainingRequest":"/home/alijon/pet-projects/test-on-vue-3/node_modules/babel-loader/lib/index.js!/home/alijon/pet-projects/test-on-vue-3/src/store/modules/user/actions.js","dependencies":[{"path":"/home/alijon/pet-projects/test-on-vue-3/src/store/modules/user/actions.js","mtime":1677454235802},{"path":"/home/alijon/pet-projects/test-on-vue-3/node_modules/cache-loader/dist/cjs.js","mtime":1677358791790},{"path":"/home/alijon/pet-projects/test-on-vue-3/node_modules/babel-loader/lib/index.js","mtime":1677358791782}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvYWxpam9uL3BldC1wcm9qZWN0cy90ZXN0LW9uLXZ1ZS0zL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IHJvdXRlciBmcm9tICIuLi8uLi8uLi9yb3V0ZXIiOwpleHBvcnQgZGVmYXVsdCB7CiAgZ2V0RGF0YTogZnVuY3Rpb24gZ2V0RGF0YShfcmVmLCB0b2tlbikgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIGNvbW1pdCwgX3lpZWxkJGF4aW9zJGdldCwgZGF0YTsKCiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZ2V0KCdodHRwczovL3Rlc3QtYXNzaWdubWVudC5lbXBoYXNvZnQuY29tL2FwaS92MS91c2VycycsIHsKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogIlRva2VuICIuY29uY2F0KHRva2VuKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgIF95aWVsZCRheGlvcyRnZXQgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkYXhpb3MkZ2V0LmRhdGE7CiAgICAgICAgICAgICAgY29tbWl0KCdTRVRfVVNFUl9EQVRBJywgZGF0YSk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfSwKICBjcmVhdGVVc2VyOiBmdW5jdGlvbiBjcmVhdGVVc2VyKF9yZWYyLCBfcmVmMykgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgIHZhciBjb21taXQsIHN0YXRlLCB1c2VybmFtZSwgcGFzc3dvcmQsIGZpcnN0X25hbWUsIGxhc3RfbmFtZSwgaXNfYWN0aXZlLCBfeWllbGQkYXhpb3MkcG9zdCwgZGF0YTsKCiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0LCBzdGF0ZSA9IF9yZWYyLnN0YXRlOwogICAgICAgICAgICAgIHVzZXJuYW1lID0gX3JlZjMudXNlcm5hbWUsIHBhc3N3b3JkID0gX3JlZjMucGFzc3dvcmQsIGZpcnN0X25hbWUgPSBfcmVmMy5maXJzdF9uYW1lLCBsYXN0X25hbWUgPSBfcmVmMy5sYXN0X25hbWUsIGlzX2FjdGl2ZSA9IF9yZWYzLmlzX2FjdGl2ZTsKICAgICAgICAgICAgICBjb21taXQoJ0NIQU5HRV9MT0FESU5HJywgdHJ1ZSk7CiAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5wb3N0KCdodHRwczovL3Rlc3QtYXNzaWdubWVudC5lbXBoYXNvZnQuY29tL2FwaS92MS91c2VycycsIHsKICAgICAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSwKICAgICAgICAgICAgICAgIGZpcnN0X25hbWU6IGZpcnN0X25hbWUsCiAgICAgICAgICAgICAgICBsYXN0X25hbWU6IGxhc3RfbmFtZSwKICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZCwKICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogaXNfYWN0aXZlCiAgICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiAiVG9rZW4gIi5jb25jYXQoc3RhdGUudG9rZW4pCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgX3lpZWxkJGF4aW9zJHBvc3QgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBkYXRhID0gX3lpZWxkJGF4aW9zJHBvc3QuZGF0YTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygnY3JlYXRlUG9zdDogJywgZGF0YSk7IC8vIGNvbW1pdCgnU0VUX1VTRVJfREFUQScsIGRhdGEpCgogICAgICAgICAgICAgIGNvbW1pdCgnQ0hBTkdFX0xPQURJTkcnLCBmYWxzZSk7CiAgICAgICAgICAgICAgY29tbWl0KCdUT0dHTEVfTU9EQUxfVklTSUJMRScsIGZhbHNlKTsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEyOwogICAgICAgICAgICAgIHJldHVybiByb3V0ZXIucHVzaCh7CiAgICAgICAgICAgICAgICBuYW1lOiAndXNlcnMnCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpKCk7CiAgfSwKICBlZGl0VXNlcjogZnVuY3Rpb24gZWRpdFVzZXIoX3JlZjQsIF9yZWY1KSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMygpIHsKICAgICAgdmFyIGNvbW1pdCwgc3RhdGUsIGlkLCB1c2VybmFtZSwgcGFzc3dvcmQsIGZpcnN0X25hbWUsIGxhc3RfbmFtZSwgaXNfYWN0aXZlLCBfeWllbGQkYXhpb3MkcHV0LCBkYXRhOwoKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNC5jb21taXQsIHN0YXRlID0gX3JlZjQuc3RhdGU7CiAgICAgICAgICAgICAgaWQgPSBfcmVmNS5pZCwgdXNlcm5hbWUgPSBfcmVmNS51c2VybmFtZSwgcGFzc3dvcmQgPSBfcmVmNS5wYXNzd29yZCwgZmlyc3RfbmFtZSA9IF9yZWY1LmZpcnN0X25hbWUsIGxhc3RfbmFtZSA9IF9yZWY1Lmxhc3RfbmFtZSwgaXNfYWN0aXZlID0gX3JlZjUuaXNfYWN0aXZlOwogICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdjb21taXQ6ICcsIHsKICAgICAgICAgICAgICAgIGlkOiBpZCwKICAgICAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VybmFtZSwKICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZCwKICAgICAgICAgICAgICAgIGZpcnN0X25hbWU6IGZpcnN0X25hbWUsCiAgICAgICAgICAgICAgICBsYXN0X25hbWU6IGxhc3RfbmFtZSwKICAgICAgICAgICAgICAgIGlzX2FjdGl2ZTogaXNfYWN0aXZlCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA1OwogICAgICAgICAgICAgIHJldHVybiBheGlvcy5wdXQoImh0dHBzOi8vdGVzdC1hc3NpZ25tZW50LmVtcGhhc29mdC5jb20vYXBpL3YxL3VzZXJzLyIuY29uY2F0KGlkKSwgewogICAgICAgICAgICAgICAgdXNlcm5hbWU6IHVzZXJuYW1lLAogICAgICAgICAgICAgICAgZmlyc3RfbmFtZTogZmlyc3RfbmFtZSwKICAgICAgICAgICAgICAgIGxhc3RfbmFtZTogbGFzdF9uYW1lLAogICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkLAogICAgICAgICAgICAgICAgaXNfYWN0aXZlOiBpc19hY3RpdmUKICAgICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246ICJUb2tlbiAiLmNvbmNhdChzdGF0ZS50b2tlbikKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBfeWllbGQkYXhpb3MkcHV0ID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgZGF0YSA9IF95aWVsZCRheGlvcyRwdXQuZGF0YTsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygncHV0UG9zdDogJywgZGF0YSk7CiAgICAgICAgICAgICAgY29tbWl0KCdDSEFOR0VfTE9BRElORycsIGZhbHNlKTsKICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDExOwogICAgICAgICAgICAgIHJldHVybiByb3V0ZXIucHVzaCh7CiAgICAgICAgICAgICAgICBuYW1lOiAndXNlcnMnCiAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMpOwogICAgfSkpKCk7CiAgfQp9Ow=="},{"version":3,"sources":["/home/alijon/pet-projects/test-on-vue-3/src/store/modules/user/actions.js"],"names":["axios","router","getData","token","commit","get","headers","Authorization","data","createUser","state","username","password","first_name","last_name","is_active","post","console","log","push","name","editUser","id","put"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,eAAe;AACLC,EAAAA,OADK,yBACaC,KADb,EACoB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAhBC,cAAAA,MAAgB,QAAhBA,MAAgB;AAAA;AAAA,qBACJJ,KAAK,CAACK,GAAN,CAAU,oDAAV,EAAgE;AACnFC,gBAAAA,OAAO,EAAE;AACLC,kBAAAA,aAAa,kBAAWJ,KAAX;AADR;AAD0E,eAAhE,CADI;;AAAA;AAAA;AACnBK,cAAAA,IADmB,oBACnBA,IADmB;AAO3BJ,cAAAA,MAAM,CAAC,eAAD,EAAkBI,IAAlB,CAAN;;AAP2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQ9B,GATU;AAULC,EAAAA,UAVK,oCAU+E;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAxEL,cAAAA,MAAwE,SAAxEA,MAAwE,EAAhEM,KAAgE,SAAhEA,KAAgE;AAAvDC,cAAAA,QAAuD,SAAvDA,QAAuD,EAA7CC,QAA6C,SAA7CA,QAA6C,EAAnCC,UAAmC,SAAnCA,UAAmC,EAAvBC,SAAuB,SAAvBA,SAAuB,EAAZC,SAAY,SAAZA,SAAY;AACtFX,cAAAA,MAAM,CAAC,gBAAD,EAAmB,IAAnB,CAAN;AADsF;AAAA,qBAE/DJ,KAAK,CAACgB,IAAN,CAAW,oDAAX,EAAiE;AACpFL,gBAAAA,QAAQ,EAARA,QADoF;AAEpFE,gBAAAA,UAAU,EAAVA,UAFoF;AAGpFC,gBAAAA,SAAS,EAATA,SAHoF;AAIpFF,gBAAAA,QAAQ,EAARA,QAJoF;AAKpFG,gBAAAA,SAAS,EAATA;AALoF,eAAjE,EAMpB;AACCT,gBAAAA,OAAO,EAAE;AACLC,kBAAAA,aAAa,kBAAWG,KAAK,CAACP,KAAjB;AADR;AADV,eANoB,CAF+D;;AAAA;AAAA;AAE9EK,cAAAA,IAF8E,qBAE9EA,IAF8E;AActFS,cAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BV,IAA5B,EAdsF,CAetF;;AACAJ,cAAAA,MAAM,CAAC,gBAAD,EAAmB,KAAnB,CAAN;AACAA,cAAAA,MAAM,CAAC,sBAAD,EAAyB,KAAzB,CAAN;AAjBsF;AAAA,qBAkBhFH,MAAM,CAACkB,IAAP,CAAY;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAZ,CAlBgF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBzF,GA7BU;AA8BLC,EAAAA,QA9BK,kCA8BiF;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA5EjB,cAAAA,MAA4E,SAA5EA,MAA4E,EAApEM,KAAoE,SAApEA,KAAoE;AAA3DY,cAAAA,EAA2D,SAA3DA,EAA2D,EAAvDX,QAAuD,SAAvDA,QAAuD,EAA7CC,QAA6C,SAA7CA,QAA6C,EAAnCC,UAAmC,SAAnCA,UAAmC,EAAvBC,SAAuB,SAAvBA,SAAuB,EAAZC,SAAY,SAAZA,SAAY;AACxFE,cAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB;AAACI,gBAAAA,EAAE,EAAFA,EAAD;AAAKX,gBAAAA,QAAQ,EAARA,QAAL;AAAeC,gBAAAA,QAAQ,EAARA,QAAf;AAAyBC,gBAAAA,UAAU,EAAVA,UAAzB;AAAqCC,gBAAAA,SAAS,EAATA,SAArC;AAAgDC,gBAAAA,SAAS,EAATA;AAAhD,eAAxB;AADwF;AAAA,qBAEhEf,KAAK,CAACuB,GAAN,8DAAgED,EAAhE,GAAsE;AAC1FX,gBAAAA,QAAQ,EAARA,QAD0F;AAE1FE,gBAAAA,UAAU,EAAVA,UAF0F;AAG1FC,gBAAAA,SAAS,EAATA,SAH0F;AAI1FF,gBAAAA,QAAQ,EAARA,QAJ0F;AAK1FG,gBAAAA,SAAS,EAATA;AAL0F,eAAtE,EAMrB;AACCT,gBAAAA,OAAO,EAAE;AACLC,kBAAAA,aAAa,kBAAWG,KAAK,CAACP,KAAjB;AADR;AADV,eANqB,CAFgE;;AAAA;AAAA;AAEhFK,cAAAA,IAFgF,oBAEhFA,IAFgF;AAcxFS,cAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBV,IAAzB;AACAJ,cAAAA,MAAM,CAAC,gBAAD,EAAmB,KAAnB,CAAN;AAfwF;AAAA,qBAgBlFH,MAAM,CAACkB,IAAP,CAAY;AAACC,gBAAAA,IAAI,EAAE;AAAP,eAAZ,CAhBkF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiB3F;AA/CU,CAAf","sourcesContent":["import axios from \"axios\";\r\nimport router from \"../../../router\";\r\n\r\nexport default {\r\n    async getData({commit}, token) {\r\n        const { data } = await axios.get('https://test-assignment.emphasoft.com/api/v1/users', {\r\n            headers: {\r\n                Authorization: `Token ${token}`\r\n            }\r\n        })\r\n\r\n        commit('SET_USER_DATA', data)\r\n    },\r\n    async createUser({commit, state}, {username, password, first_name, last_name, is_active}) {\r\n        commit('CHANGE_LOADING', true)\r\n        const { data } = await axios.post('https://test-assignment.emphasoft.com/api/v1/users', {\r\n            username,\r\n            first_name,\r\n            last_name,\r\n            password,\r\n            is_active,\r\n        }, {\r\n            headers: {\r\n                Authorization: `Token ${state.token}`,\r\n            }\r\n        })\r\n\r\n        console.log('createPost: ', data)\r\n        // commit('SET_USER_DATA', data)\r\n        commit('CHANGE_LOADING', false)\r\n        commit('TOGGLE_MODAL_VISIBLE', false)\r\n        await router.push({name: 'users'})\r\n    },\r\n    async editUser({commit, state}, {id, username, password, first_name, last_name, is_active}) {\r\n        console.log('commit: ', {id, username, password, first_name, last_name, is_active})\r\n        const { data } =  await axios.put(`https://test-assignment.emphasoft.com/api/v1/users/${id}`, {\r\n            username,\r\n            first_name,\r\n            last_name,\r\n            password,\r\n            is_active,\r\n        }, {\r\n            headers: {\r\n                Authorization: `Token ${state.token}`,\r\n            }\r\n        })\r\n\r\n        console.log('putPost: ', data)\r\n        commit('CHANGE_LOADING', false)\r\n        await router.push({name: 'users'})\r\n    }\r\n}"]}]}